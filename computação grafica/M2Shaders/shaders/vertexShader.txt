#version 330 core

in vec3 position; // att 0
in vec3 cor; // att 1
in vec3 normal; // att 2
in vec2 textuv; // att 3

uniform mat4 model;
uniform mat4 view;
//uniform mat4 projection;

out vec3 fragColor;
out vec3 fragNormal;
out vec3 fragPos;
out vec2 uv;

void main(void) {
    vec4 worldPosition = model * vec4(position, 1.0);
    gl_Position = (worldPosition * view) * vec4(1,1,0.01,1);
    gl_Position = vec4(gl_Position.xyz / (1 + gl_Position.z * 4), 1.0);

    fragPos = vec3(worldPosition);
    fragNormal = mat3(transpose(inverse(model))) * normal;
    uv = vec2(textuv.y, 1.0 - textuv.x);
    fragColor = cor;
}