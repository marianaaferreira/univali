/* Generated By:JavaCC: Do not edit this line. AnalisadorLexicoConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface AnalisadorLexicoConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int BEGIN = 1;
  /** RegularExpression Id. */
  int DEFINE = 2;
  /** RegularExpression Id. */
  int START = 3;
  /** RegularExpression Id. */
  int END = 4;
  /** RegularExpression Id. */
  int NUM = 5;
  /** RegularExpression Id. */
  int REAL = 6;
  /** RegularExpression Id. */
  int TEXT = 7;
  /** RegularExpression Id. */
  int FLAG = 8;
  /** RegularExpression Id. */
  int SET = 9;
  /** RegularExpression Id. */
  int READ = 10;
  /** RegularExpression Id. */
  int SHOW = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int THEN = 13;
  /** RegularExpression Id. */
  int ELSE = 14;
  /** RegularExpression Id. */
  int TRUE = 15;
  /** RegularExpression Id. */
  int FALSE = 16;
  /** RegularExpression Id. */
  int LOOP = 17;
  /** RegularExpression Id. */
  int WHILE = 18;
  /** RegularExpression Id. */
  int ATRIBUICAO = 19;
  /** RegularExpression Id. */
  int PONTO_E_VIRGULA = 20;
  /** RegularExpression Id. */
  int VIRGULA = 21;
  /** RegularExpression Id. */
  int ABRE_PARENTESES = 22;
  /** RegularExpression Id. */
  int FECHA_PARENTESES = 23;
  /** RegularExpression Id. */
  int ABRE_COLCHETES = 24;
  /** RegularExpression Id. */
  int FECHA_COLCHETES = 25;
  /** RegularExpression Id. */
  int ABRE_CHAVES = 26;
  /** RegularExpression Id. */
  int FECHA_CHAVES = 27;
  /** RegularExpression Id. */
  int MAIS = 28;
  /** RegularExpression Id. */
  int MENOS = 29;
  /** RegularExpression Id. */
  int VEZES = 30;
  /** RegularExpression Id. */
  int DIVIDIR = 31;
  /** RegularExpression Id. */
  int POTENCIA = 32;
  /** RegularExpression Id. */
  int DIVISAO_INTEIRA = 33;
  /** RegularExpression Id. */
  int RESTO_DIVISAO = 34;
  /** RegularExpression Id. */
  int IGUAL = 35;
  /** RegularExpression Id. */
  int DIFERENTE = 36;
  /** RegularExpression Id. */
  int MENOR = 37;
  /** RegularExpression Id. */
  int MAIOR = 38;
  /** RegularExpression Id. */
  int MENOR_OU_IGUAL = 39;
  /** RegularExpression Id. */
  int MAIOR_OU_IGUAL = 40;
  /** RegularExpression Id. */
  int E = 41;
  /** RegularExpression Id. */
  int OU = 42;
  /** RegularExpression Id. */
  int NAO = 43;
  /** RegularExpression Id. */
  int IDENTIFICADOR = 44;
  /** RegularExpression Id. */
  int CONSTANTE_INTEIRA = 45;
  /** RegularExpression Id. */
  int CONSTANTE_REAL = 46;
  /** RegularExpression Id. */
  int CONSTANTE_LITERAL = 47;
  /** RegularExpression Id. */
  int CONSTANTE_LOGICA = 48;
  /** RegularExpression Id. */
  int LITERAL_NAO_FECHADO = 49;
  /** RegularExpression Id. */
  int LETRA = 50;
  /** RegularExpression Id. */
  int DIGITO = 51;
  /** RegularExpression Id. */
  int CL_ASPAS_DUPLAS = 52;
  /** RegularExpression Id. */
  int CL_ASPAS_SIMPLES = 53;
  /** RegularExpression Id. */
  int ASCII = 54;
  /** RegularExpression Id. */
  int ESPACO_BRANCO = 55;
  /** RegularExpression Id. */
  int COMENTARIO_LINHA = 56;
  /** RegularExpression Id. */
  int COMENTARIO_BLOCO = 57;
  /** RegularExpression Id. */
  int CONST_INT_INVALIDA = 58;
  /** RegularExpression Id. */
  int CONST_REAL_INVALIDA = 59;
  /** RegularExpression Id. */
  int IDENTIFICADOR_INVALIDO = 60;
  /** RegularExpression Id. */
  int COMENTARIO_NAO_FECHADO = 61;
  /** RegularExpression Id. */
  int SIMBOLO_INVALIDO = 62;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"begin\"",
    "\"define\"",
    "\"start\"",
    "\"end\"",
    "\"num\"",
    "\"real\"",
    "\"text\"",
    "\"flag\"",
    "\"set\"",
    "\"read\"",
    "\"show\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"true\"",
    "\"false\"",
    "\"loop\"",
    "\"while\"",
    "\"=\"",
    "\";\"",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"**\"",
    "\"%\"",
    "\"%%\"",
    "\"==\"",
    "\"!=\"",
    "\"<<\"",
    "\">>\"",
    "\"<<=\"",
    "\">>=\"",
    "\"&\"",
    "\"|\"",
    "\"!\"",
    "<IDENTIFICADOR>",
    "<CONSTANTE_INTEIRA>",
    "<CONSTANTE_REAL>",
    "<CONSTANTE_LITERAL>",
    "<CONSTANTE_LOGICA>",
    "<LITERAL_NAO_FECHADO>",
    "<LETRA>",
    "<DIGITO>",
    "<CL_ASPAS_DUPLAS>",
    "<CL_ASPAS_SIMPLES>",
    "<ASCII>",
    "<ESPACO_BRANCO>",
    "<COMENTARIO_LINHA>",
    "<COMENTARIO_BLOCO>",
    "<CONST_INT_INVALIDA>",
    "<CONST_REAL_INVALIDA>",
    "<IDENTIFICADOR_INVALIDO>",
    "<COMENTARIO_NAO_FECHADO>",
    "<SIMBOLO_INVALIDO>",
  };

}
